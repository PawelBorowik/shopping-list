{"version":3,"sources":["componets/AddItem.js","componets/Item.js","componets/ItemShoppingList.js","componets/App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","useStyles","makeStyles","root","margin","spacing","width","formControl","minWidth","selectEmpty","marginTop","AddItem","props","classes","useState","id","setId","text","setText","emptyInput","Boolean","checkbox","setCheckbox","selectItem","setSelectItem","bought","setBought","alert","setAlert","inputLabel","useRef","labelWidth","setLabelWidth","useEffect","current","offsetWidth","className","handleVisibieForm","action","noValidate","autoComplete","TextField","label","variant","value","onChange","e","target","error","helperText","FormControl","component","FormControlLabel","control","Checkbox","color","labelPlacement","checked","InputLabel","ref","Select","labelId","MenuItem","FormHelperText","Button","onClick","newItem","add","counter","AddNewItem","Item","item","handleBoughtItem","icon","faCartArrowDown","handleRemovetItemFromList","faTrashAlt","ItemShopingList","itemsFromForm","setItems","warning","setWarning","selectItems","setSelectItems","itm","hideBought","map","product","removeItem","filter","handleWarning","handleKindOfProduct","options","showShopingList","shopingList","key","itemsSelect","numberFood","numberClothes","numberClean","numberTools","numberOther","size","removeAllBoughtItem","handleRemovetAllBoughtItem","length","App","setChangeArrowIcons","items","faList","faArrowUp","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"gVAaMA,EAAQC,YAAe,CACzBC,QAAS,CACLC,QAAS,CACLC,KAAM,cAMZC,EAAYC,aAAW,SAAAN,GAAK,MAAK,CACnCO,KAAM,CACF,QAAS,CACLC,OAAQR,EAAMS,QAAQ,GACtBC,MAAO,MAGfC,YAAa,CACTH,OAAQR,EAAMS,QAAQ,GACtBG,SAAU,KAEdC,YAAa,CACTC,UAAWd,EAAMS,QAAQ,QAgHlBM,MA5Gf,SAAiBC,GAEb,IAAMC,EAAUZ,IAFI,EAKAa,mBAAS,GALT,mBAKbC,EALa,KAKTC,EALS,OAMIF,mBAAS,IANb,mBAMbG,EANa,KAMPC,EANO,KASdC,EAAaC,SADHH,GARI,EAUYH,oBAAS,GAVrB,mBAUbO,EAVa,KAUHC,EAVG,OAWgBR,mBAAS,SAXzB,mBAWbS,EAXa,KAWDC,EAXC,OAYQV,oBAAS,GAZjB,mBAYbW,EAZa,KAYLC,EAZK,OAaMZ,oBAAS,GAbf,mBAaba,EAba,KAaNC,EAbM,KAedC,EAAaC,iBAAO,MAfN,EAgBgBhB,mBAAS,GAhBzB,mBAgBbiB,EAhBa,KAgBDC,EAhBC,KAgDpB,OA/BAC,qBAAU,WACND,EAAcH,EAAWK,QAAQC,eAClC,IA+BC,yBAAKC,UAAS,yBAAoBxB,EAAMyB,kBAAoB,OAAS,KACjE,kBAAC,IAAD,CAAkBzC,MAAOA,GACrB,0BAAMwC,UAAU,OAAOE,OAAO,IAC1B,yBAAKF,UAAU,cACX,yBAAKA,UAAWvB,EAAQV,KAAMoC,YAAU,EAACC,aAAa,OAClD,kBAACC,EAAA,EAAD,CAAW1B,GAAG,iBAAiB2B,MAAM,gBACjCC,QAAQ,WAAWC,MAAO3B,EAAM4B,SAnCnC,SAACC,GACtB5B,EAAQ4B,EAAEC,OAAOH,QAmCOI,MAAO7B,GAAcQ,EAAOsB,WAAahC,EAAe,KAARU,MAI5D,yBAAKS,UAAU,kBACX,kBAACc,EAAA,EAAD,CAAaC,UAAU,YACnB,kBAACC,EAAA,EAAD,CACIR,MAAM,MACNS,QAAS,kBAACC,EAAA,EAAD,CAAUC,MAAM,YACzBb,MAAM,4BACNc,eAAe,MACfC,QAASpC,EACTwB,SA7CL,SAACC,GACpBxB,EAAYwB,EAAEC,OAAOU,cAiDT,yBAAKrB,UAAU,aACX,kBAACc,EAAA,EAAD,CAAaP,QAAQ,WAAWP,UAAWvB,EAAQN,YAAayC,MAAsB,UAAfzB,GAA0BI,GAC7F,kBAAC+B,EAAA,EAAD,CAAYC,IAAK9B,EAAYd,GAAG,qCAAhC,mCAGA,kBAAC6C,EAAA,EAAD,CACIC,QAAQ,oCACR9C,GAAG,8BACH6B,MAAOrB,EACPsB,SAxDD,SAACC,GACxBtB,EAAcsB,EAAEC,OAAOH,QAwDCb,WAAYA,GAEZ,kBAAC+B,EAAA,EAAD,CAAUlB,MAAM,UAChB,kBAACkB,EAAA,EAAD,CAAUlB,MAAO,QAAjB,kBACA,kBAACkB,EAAA,EAAD,CAAUlB,MAAO,WAAjB,eACA,kBAACkB,EAAA,EAAD,CAAUlB,MAAO,SAAjB,kBACA,kBAACkB,EAAA,EAAD,CAAUlB,MAAO,SAAjB,sBACA,kBAACkB,EAAA,EAAD,CAAUlB,MAAO,SAAjB,SAEJ,kBAACmB,EAAA,EAAD,KAAiC,UAAfxC,EAAyBI,EAAQ,QAG3D,yBAAKS,UAAU,oBACX,kBAAC4B,EAAA,EAAD,CAAQrB,QAAQ,WAAWY,MAAM,UAC7BU,QAAS,kBApEd,WACf,GAAKhD,GAAuB,UAAfM,EAGR,CACD,IAAI2C,EAAU,CAAEnD,KAAIE,OAAMI,WAAUI,SAAQF,cAC5CL,EAAQ,IACRI,GAAY,GACZE,EAAc,SACdE,GAAU,GACVE,EAAS,IACThB,EAAMuD,IAAID,QATVtC,EAAS,uCAWb,IAAIwC,EAAUrD,EACdC,IAAQoD,GAsD2BC,KADnB,kC,wBC5GTC,MAvBf,SAAc1D,GAEV,OAEI,wBAAIwB,UAAU,UACV,yBAAKA,UAAS,sBAAiBxB,EAAM2D,KAAKlD,SAAW,YAAc,GAArD,YAA2DT,EAAM2D,KAAK9C,OAAS,SAAW,IACpGwC,QAAS,kBAAMrD,EAAM4D,iBAAiB5D,EAAM2D,KAAKxD,MACjD,kBAAC,IAAD,CAAiB0D,KAAMC,OAE3B,yBACItC,UAAS,oBAAexB,EAAM2D,KAAKlD,SAAW,YAAc,GAAnD,YAAyDT,EAAM2D,KAAK9C,OAAS,SAAW,IACjGwC,QAAS,kBAAMrD,EAAM4D,iBAAiB5D,EAAM2D,KAAKxD,MAChDH,EAAM2D,KAAKtD,MAEhB,yBACImB,UAAU,mBACV6B,QAAS,kBAAMrD,EAAM+D,0BAA0B/D,EAAM2D,KAAKxD,MAC1D,kBAAC,IAAD,CAAiB0D,KAAMG,SCdjChF,EAAQC,YAAe,CACzBC,QAAS,CACLC,QAAS,CACLC,KAAM,cAmNH6E,MA9Mf,SAAyBjE,GAAQ,IAAD,EAEME,mBAAS,IAFf,mBAErBgE,EAFqB,KAENC,EAFM,OAGEjE,oBAAS,GAHX,mBAGrBkE,EAHqB,KAGZC,EAHY,OAIUnE,mBAAS,OAJnB,mBAIrBoE,EAJqB,KAIRC,EAJQ,KAS5BlD,qBAAU,WACFrB,EAAMsD,SACNa,GAAS,SAAAK,GAAG,4BAAQA,GAAR,CAAaxE,EAAMsD,eAGpC,CAACtD,EAAMsD,UAGV,IAAMM,EAAmB,SAACzD,GACtB,IAAIsE,EAAaP,EAAcQ,KAAI,SAAAC,GAE/B,OADIA,EAAQxE,KAAOA,IAAIwE,EAAQ9D,QAAU8D,EAAQ9D,QAC1C8D,KAEXR,EAASM,IAGPV,EAA4B,SAAC5D,GAC/B,IAAIyE,EAAaV,EAAcW,QAAO,SAACF,GAAD,OAAaA,EAAQxE,KAAOA,KAClEgE,EAASS,IASPE,EAAgB,WAClBT,GAAYD,IAUVW,EAAsB,SAAAC,GACxBT,EAAeS,IAGbC,EAAkB,SAACD,GACrB,IAAIE,EAAW,YAAOhB,GAEtB,GAAII,IAAgBU,EAChB,OAAQV,GACJ,IAAK,MACD,OAAOY,EAAYR,KAAI,SAAAf,GAAI,OAAI,kBAAC,EAAD,CAC3BwB,IAAKxB,EAAKxD,GAAIwD,KAAMA,EACpBC,iBAAkBA,EAClBG,0BAA2BA,OACnC,IAAK,OAED,OADAmB,EAAcA,EAAYL,QAAO,SAAAO,GAAW,MAA+B,SAA3BA,EAAYzE,eACzC+D,KAAI,SAAAf,GAAI,OAAI,kBAAC,EAAD,CAC3BwB,IAAKxB,EAAKxD,GAAIwD,KAAMA,EACpBC,iBAAkBA,EAClBG,0BAA2BA,OACnC,IAAK,UAED,OADAmB,EAAcA,EAAYL,QAAO,SAAAO,GAAW,MAA+B,YAA3BA,EAAYzE,eACzC+D,KAAI,SAAAf,GAAI,OAAI,kBAAC,EAAD,CAC3BwB,IAAKxB,EAAKxD,GAAIwD,KAAMA,EACpBC,iBAAkBA,EAClBG,0BAA2BA,OACnC,IAAK,QAED,OADAmB,EAAcA,EAAYL,QAAO,SAAAO,GAAW,MAA+B,UAA3BA,EAAYzE,eACzC+D,KAAI,SAAAf,GAAI,OAAI,kBAAC,EAAD,CAC3BwB,IAAKxB,EAAKxD,GAAIwD,KAAMA,EACpBC,iBAAkBA,EAClBG,0BAA2BA,OACnC,IAAK,QAED,OADAmB,EAAcA,EAAYL,QAAO,SAAAO,GAAW,MAA+B,UAA3BA,EAAYzE,eACzC+D,KAAI,SAAAf,GAAI,OAAI,kBAAC,EAAD,CAC3BwB,IAAKxB,EAAKxD,GAAIwD,KAAMA,EACpBC,iBAAkBA,EAClBG,0BAA2BA,OACnC,IAAK,QAED,OADAmB,EAAcA,EAAYL,QAAO,SAAAO,GAAW,MAA+B,UAA3BA,EAAYzE,eACzC+D,KAAI,SAAAf,GAAI,OAAI,kBAAC,EAAD,CAC3BwB,IAAKxB,EAAKxD,GAAIwD,KAAMA,EACpBC,iBAAkBA,EAClBG,0BAA2BA,OACnC,QACI,OAAO,OAOjBsB,EAAanB,EAAcW,QAAO,SAAAlB,GAAI,MAAwB,SAApBA,EAAKhD,cAC/C2E,EAAgBpB,EAAcW,QAAO,SAAAlB,GAAI,MAAwB,YAApBA,EAAKhD,cAClD4E,EAAcrB,EAAcW,QAAO,SAAAlB,GAAI,MAAwB,UAApBA,EAAKhD,cAChD6E,EAActB,EAAcW,QAAO,SAAAlB,GAAI,MAAwB,UAApBA,EAAKhD,cAChD8E,EAAcvB,EAAcW,QAAO,SAAAlB,GAAI,MAAwB,UAApBA,EAAKhD,cAEtD,OACI,yBAAKa,UAAU,QACX,kBAAC,IAAD,CAAkBxC,MAAOA,GAErB,yBAAKwC,UAAU,iBACX,yBAAKA,UAAU,0BACX,kBAAC4B,EAAA,EAAD,CAAQrB,QAAQ,WAAW2D,KAAK,QAAQ/C,MAAM,UAC1CU,QAAS,kBAlFE,WAC/B,IAAIsC,EAAsBzB,EAAcW,QAAO,SAAAF,GAAO,OAAKA,EAAQ9D,UACnEsD,EAASwB,GAgF0BC,KADnB,gCAKJ,yBAAKpE,UAAU,cACX,kBAAC4B,EAAA,EAAD,CAAQrB,QAAQ,WAAW2D,KAAK,QAAQ/C,MAAM,UAC1CU,QAAS,kBAAMyB,MADnB,mCAQR,yBAAKtD,UAAS,uBAAkB4C,EAAU,gBAAkB,GAA9C,MACV,yBAAK5C,UAAU,sBACX,8FAEA,yBAAKA,UAAU,+BACX,kBAAC4B,EAAA,EAAD,CAAQrB,QAAQ,WAAW2D,KAAK,QAAQ/C,MAAM,UAC1CU,QAAS,kBAzFjCc,EAAS,SACTW,MAuFoB,QAIJ,yBAAKtD,UAAU,+BACX,kBAAC4B,EAAA,EAAD,CAAQrB,QAAQ,YAAY2D,KAAK,QAAQ/C,MAAM,UAC3CU,QAAS,kBAAMyB,MADnB,WAQhB,yBAAKtD,UAAU,oBAEX,yBAAKA,UAAU,kBAAkB6B,QAAS,kBAAM0B,EAAoB,SAChE,yBAAKvD,UAAS,qBAAgC,QAAhB8C,EAAwB,SAAW,OAAjE,aAGA,wBAAI9C,UAAS,8BAAyC,QAAhB8C,EAAwB,SAAW,OAAzE,cACgBJ,EAAc2B,OAD9B,IAEKZ,EAAgB,SAGzB,yBAAKzD,UAAU,mBAAmB6B,QAAS,kBAAM0B,EAAoB,UACjE,yBAAKvD,UAAS,sBAAiC,SAAhB8C,EAAyB,SAAW,OAAnE,kBAGA,wBAAI9C,UAAS,+BAA0C,SAAhB8C,EAAyB,SAAW,OAA3E,mBACgBe,EAAWQ,OAD3B,IAEKZ,EAAgB,UAGzB,yBAAKzD,UAAU,sBAAsB6B,QAAS,kBAAM0B,EAAoB,aACpE,yBAAKvD,UAAS,yBAAoC,YAAhB8C,EAA4B,SAAW,OAAzE,eAGA,wBAAI9C,UAAS,kCAA6C,YAAhB8C,EAA4B,SAAW,OAAjF,gBACagB,EAAcO,OAD3B,IAEKZ,EAAgB,aAGzB,yBAAKzD,UAAU,oBAAoB6B,QAAS,kBAAM0B,EAAoB,WAClE,yBAAKvD,UAAS,uBAAkC,UAAhB8C,EAA0B,SAAW,OAArE,kBAEA,6BACI,wBAAI9C,UAAS,gCAA2C,UAAhB8C,EAA0B,SAAW,OAA7E,mBACqBiB,EAAYM,OADjC,IAECZ,EAAgB,YAIzB,yBAAKzD,UAAU,oBAAoB6B,QAAS,kBAAM0B,EAAoB,WAClE,yBAAKvD,UAAS,uBAAkC,UAAhB8C,EAA0B,SAAW,OAArE,sBAGA,wBAAI9C,UAAS,gCAA2C,UAAhB8C,EAA0B,SAAW,OAA7E,uBACoBkB,EAAYK,OADhC,IAEKZ,EAAgB,WAIzB,yBAAKzD,UAAU,oBAAoB6B,QAAS,kBAAM0B,EAAoB,WAClE,yBAAKvD,UAAS,uBAAkC,UAAhB8C,EAA0B,SAAW,OAArE,QAGA,wBAAI9C,UAAS,gCAA2C,UAAhB8C,EAA0B,SAAW,OAA7E,SACWmB,EAAYI,OADvB,IAEKZ,EAAgB,cCtK1Ba,MAxCf,WAAgB,IAAD,EAEuB5F,oBAAS,GAFhC,mBAEN2D,EAFM,KAEAkC,EAFA,OAGa7F,mBAAS,MAHtB,mBAGN8F,EAHM,KAGC7B,EAHD,KAYb,OAEE,yBAAK3C,UAAU,OACb,gCACE,yBAAKA,UAAU,YACb,wBAAIA,UAAU,aAAY,kBAAC,IAAD,CAAiBqC,KAAMC,MAAjD,qBACA,yBAAKtC,UAAU,WAAW6B,QAAS,WATzC0C,GAAqBlC,KAUb,kBAAC,IAAD,CAAiBA,KAAMoC,MACvB,yBAAKzE,UAAS,oBAAeqC,EAAO,OAAS,GAA/B,MACZ,kBAAC,IAAD,CAAiBA,KAAMqC,UAM/B,iCACE,kBAAC,EAAD,CAASzE,kBAAmBoC,EAAMN,IAvBrB,SAAAyC,GACjB7B,EAAS6B,OAyBP,6BAEA,iCACE,kBAAC,EAAD,CAAc1C,QAAS0C,OC7BXxF,QACW,cAA7B2F,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA7E,GACL8E,QAAQ9E,MAAMA,EAAM+E,c","file":"static/js/main.a25c82ca.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#b11adc'\r\n        }\r\n    },\r\n});\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: 300,\r\n        },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 300,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction AddItem(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    const [id, setId] = useState(0)\r\n    const [text, setText] = useState(\"\")\r\n    // przeróbka stringa na boolien na potrzeby error z inputa:\r\n    const noText = !text\r\n    const emptyInput = Boolean(noText)\r\n    const [checkbox, setCheckbox] = useState(false)\r\n    const [selectItem, setSelectItem] = useState(\"empty\")\r\n    const [bought, setBought] = useState(false)\r\n    const [alert, setAlert] = useState(false)\r\n\r\n    const inputLabel = useRef(null);\r\n    const [labelWidth, setLabelWidth] = useState(0);\r\n    useEffect(() => {\r\n        setLabelWidth(inputLabel.current.offsetWidth);\r\n    }, []);\r\n\r\n    const handleChangeText = (e) => {\r\n        setText(e.target.value)\r\n    }\r\n    const handleCheckbox = (e) => {\r\n        setCheckbox(e.target.checked)\r\n    }\r\n    const handleChangeSelect = (e) => {\r\n        setSelectItem(e.target.value)\r\n    }\r\n    const AddNewItem = () => {\r\n        if (!text || selectItem === \"empty\") {\r\n            setAlert(\"pole musi być uzupełnione\")\r\n        }\r\n        else {\r\n            let newItem = { id, text, checkbox, bought, selectItem }\r\n            setText(\"\")\r\n            setCheckbox(false)\r\n            setSelectItem(\"empty\")\r\n            setBought(false)\r\n            setAlert(\"\")\r\n            props.add(newItem)\r\n        }\r\n        let counter = id\r\n        setId(++counter)\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className={`conteiner-form ${props.handleVisibieForm ? \"hide\" : \"\"}`}>\r\n            <MuiThemeProvider theme={theme}>\r\n                <form className=\"form\" action=\"\">\r\n                    <div className=\"form_input\">\r\n                        <div className={classes.root} noValidate autoComplete=\"off\" >\r\n                            <TextField id=\"outlined-basic\" label=\"Dodaj produkt\"\r\n                                variant=\"outlined\" value={text} onChange={handleChangeText}\r\n                                error={emptyInput && alert} helperText={!text ? alert : null} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form_important\">\r\n                        <FormControl component=\"fieldset\">\r\n                            <FormControlLabel\r\n                                value=\"end\"\r\n                                control={<Checkbox color=\"primary\" />}\r\n                                label=\"Zaznacz jako pilny zakup \"\r\n                                labelPlacement=\"end\"\r\n                                checked={checkbox}\r\n                                onChange={handleCheckbox}\r\n                            />\r\n                        </FormControl>\r\n                    </div>\r\n\r\n                    <div className=\"form_kind\">\r\n                        <FormControl variant=\"outlined\" className={classes.formControl} error={selectItem === \"empty\" && alert}>\r\n                            <InputLabel ref={inputLabel} id=\"demo-simple-select-outlined-label\">\r\n                                Wybierz kategorię produktu\r\n                            </InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-outlined-label\"\r\n                                id=\"demo-simple-select-outlined\"\r\n                                value={selectItem}\r\n                                onChange={handleChangeSelect}\r\n                                labelWidth={labelWidth}\r\n                            >\r\n                                <MenuItem value=\"empty\"></MenuItem>\r\n                                <MenuItem value={\"food\"}>spożywcze</MenuItem>\r\n                                <MenuItem value={\"clothes\"}>odzież</MenuItem>\r\n                                <MenuItem value={\"clean\"}>art. chemiczne</MenuItem>\r\n                                <MenuItem value={\"tools\"}>sprzęt domowy</MenuItem>\r\n                                <MenuItem value={\"other\"}>inne</MenuItem>\r\n                            </Select>\r\n                            <FormHelperText >{selectItem === \"empty\" ? alert : null}</FormHelperText>\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"form_button-area\">\r\n                        <Button variant=\"outlined\" color=\"primary\"\r\n                            onClick={() => AddNewItem()}>\r\n                            Dodaj do listy zakupów\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </MuiThemeProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddItem;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCartArrowDown, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction Item(props) {\r\n\r\n    return (\r\n\r\n        <li className=\"listli\">\r\n            <div className={`list_basket ${props.item.checkbox ? \"important\" : \"\"} ${props.item.bought ? \"bought\" : \"\"}`}\r\n                onClick={() => props.handleBoughtItem(props.item.id)}>\r\n                <FontAwesomeIcon icon={faCartArrowDown} />\r\n            </div>\r\n            <div\r\n                className={`list_item ${props.item.checkbox ? \"important\" : \"\"} ${props.item.bought ? \"bought\" : \"\"}`}\r\n                onClick={() => props.handleBoughtItem(props.item.id)}>\r\n                {props.item.text}\r\n            </div>\r\n            <div\r\n                className=\"list_delete-icon\"\r\n                onClick={() => props.handleRemovetItemFromList(props.item.id)}>\r\n                <FontAwesomeIcon icon={faTrashAlt} />\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Item;","import React, { useState, useEffect } from 'react';\r\nimport Item from './Item'\r\nimport Button from '@material-ui/core/Button';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\n\r\n//customizacja domyślnego kolory primar na własny\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#b11adc'\r\n        }\r\n    },\r\n});\r\n\r\nfunction ItemShopingList(props) {\r\n\r\n    const [itemsFromForm, setItems] = useState([])\r\n    const [warning, setWarning] = useState(false)\r\n    const [selectItems, setSelectItems] = useState(\"all\")\r\n\r\n\r\n    // itm odnosi się do itemsFromForm ze state - zeby odwolać się do zmiennej poza useEffects, która moze być niedostepna\r\n\r\n    useEffect(() => {\r\n        if (props.newItem) {\r\n            setItems(itm => [...itm, props.newItem])\r\n\r\n        }\r\n    }, [props.newItem])\r\n\r\n    //obsługa wykreslenia produktu z listy\r\n    const handleBoughtItem = (id) => {\r\n        let hideBought = itemsFromForm.map(product => {\r\n            if (product.id === id) product.bought = !product.bought;\r\n            return product\r\n        })\r\n        setItems(hideBought)\r\n    }\r\n    //obsługa przycisku usuwajacego produkt z listy\r\n    const handleRemovetItemFromList = (id) => {\r\n        let removeItem = itemsFromForm.filter((product) => product.id !== id)\r\n        setItems(removeItem)\r\n    }\r\n    //obsluga przycisku usuwającego wszystkie kupione/wykreslone z listy produkty\r\n    const handleRemovetAllBoughtItem = () => {\r\n        let removeAllBoughtItem = itemsFromForm.filter(product => !product.bought)\r\n        setItems(removeAllBoughtItem)\r\n    }\r\n\r\n    // funkcja wyswietlająca ostrzezenie przed usuniecem wszystkich elementów z listy\r\n    const handleWarning = () => {\r\n        setWarning(!warning)\r\n    }\r\n\r\n    //usuwanie listy zakupów\r\n    const handleClearList = () => {\r\n        setItems([])\r\n        handleWarning()\r\n    }\r\n\r\n    // select okreslajacy rodzaj zakupw\r\n    const handleKindOfProduct = options => {\r\n        setSelectItems(options)\r\n    }\r\n\r\n    const showShopingList = (options) => {\r\n        let shopingList = [...itemsFromForm]\r\n\r\n        if (selectItems === options) {\r\n            switch (selectItems) {\r\n                case \"all\":\r\n                    return shopingList.map(item => <Item\r\n                        key={item.id} item={item}\r\n                        handleBoughtItem={handleBoughtItem}\r\n                        handleRemovetItemFromList={handleRemovetItemFromList} />)\r\n                case \"food\":\r\n                    shopingList = shopingList.filter(itemsSelect => itemsSelect.selectItem === \"food\")\r\n                    return shopingList.map(item => <Item\r\n                        key={item.id} item={item}\r\n                        handleBoughtItem={handleBoughtItem}\r\n                        handleRemovetItemFromList={handleRemovetItemFromList} />)\r\n                case \"clothes\":\r\n                    shopingList = shopingList.filter(itemsSelect => itemsSelect.selectItem === \"clothes\")\r\n                    return shopingList.map(item => <Item\r\n                        key={item.id} item={item}\r\n                        handleBoughtItem={handleBoughtItem}\r\n                        handleRemovetItemFromList={handleRemovetItemFromList} />)\r\n                case \"clean\":\r\n                    shopingList = shopingList.filter(itemsSelect => itemsSelect.selectItem === \"clean\")\r\n                    return shopingList.map(item => <Item\r\n                        key={item.id} item={item}\r\n                        handleBoughtItem={handleBoughtItem}\r\n                        handleRemovetItemFromList={handleRemovetItemFromList} />)\r\n                case \"tools\":\r\n                    shopingList = shopingList.filter(itemsSelect => itemsSelect.selectItem === \"tools\")\r\n                    return shopingList.map(item => <Item\r\n                        key={item.id} item={item}\r\n                        handleBoughtItem={handleBoughtItem}\r\n                        handleRemovetItemFromList={handleRemovetItemFromList} />)\r\n                case \"other\":\r\n                    shopingList = shopingList.filter(itemsSelect => itemsSelect.selectItem === \"other\")\r\n                    return shopingList.map(item => <Item\r\n                        key={item.id} item={item}\r\n                        handleBoughtItem={handleBoughtItem}\r\n                        handleRemovetItemFromList={handleRemovetItemFromList} />)\r\n                default:\r\n                    return null\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n    //liczniki ilości produktów na kartach\r\n    const numberFood = itemsFromForm.filter(item => item.selectItem === \"food\")\r\n    const numberClothes = itemsFromForm.filter(item => item.selectItem === \"clothes\")\r\n    const numberClean = itemsFromForm.filter(item => item.selectItem === \"clean\")\r\n    const numberTools = itemsFromForm.filter(item => item.selectItem === \"tools\")\r\n    const numberOther = itemsFromForm.filter(item => item.selectItem === \"other\")\r\n\r\n    return (\r\n        <div className=\"list\">\r\n            <MuiThemeProvider theme={theme}>\r\n\r\n                <div className=\" list_buttons\">\r\n                    <div className=\"list_delete-all-bought\">\r\n                        <Button variant=\"outlined\" size=\"small\" color=\"primary\"\r\n                            onClick={() => handleRemovetAllBoughtItem()}>\r\n                            usuń wszystkie kupione\r\n                         </Button>\r\n                    </div>\r\n                    <div className=\"list_clear\">\r\n                        <Button variant=\"outlined\" size=\"small\" color=\"primary\"\r\n                            onClick={() => handleWarning()}>\r\n                            wyczyśc liste zakupów\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className={`list_warning ${warning ? \"show--warning\" : \"\"} `}>\r\n                    <div className=\"list_warning-alert\">\r\n                        <p>Czy na pewno chcesz usunąć wszytkie produkty z listy?</p>\r\n\r\n                        <div className=\"list-button-warning-yes-no \">\r\n                            <Button variant=\"outlined\" size=\"large\" color=\"primary\"\r\n                                onClick={() => handleClearList()}>tak\r\n                            </Button>\r\n                        </div>\r\n                        <div className=\"list-button-warning-yes-no \">\r\n                            <Button variant=\"contained\" size=\"large\" color=\"primary\"\r\n                                onClick={() => handleWarning()} >nie\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </MuiThemeProvider>\r\n\r\n            <div className=\"list_select-kind\" >\r\n\r\n                <div className=\"list_folder-all\" onClick={() => handleKindOfProduct(\"all\")}>\r\n                    <div className={`button all ${selectItems === \"all\" ? \"active\" : null}`}>\r\n                        wszystkie\r\n                    </div>\r\n                    <ul className={`list_table all-list ${selectItems === \"all\" ? \"active\" : null}`}>\r\n                        wszystkie ({itemsFromForm.length})\r\n                        {showShopingList(\"all\")}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"list_folder-food\" onClick={() => handleKindOfProduct(\"food\")} >\r\n                    <div className={`button food ${selectItems === \"food\" ? \"active\" : null}`}>\r\n                        spożywcze\r\n                    </div>\r\n                    <ul className={`list_table food-list ${selectItems === \"food\" ? \"active\" : null}`}>\r\n                        spożywcze ({numberFood.length})\r\n                        {showShopingList(\"food\")}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"list_folder-clothes\" onClick={() => handleKindOfProduct(\"clothes\")}>\r\n                    <div className={`button clothes ${selectItems === \"clothes\" ? \"active\" : null}`}>\r\n                        odzież\r\n                    </div>\r\n                    <ul className={`list_table clothes-list ${selectItems === \"clothes\" ? \"active\" : null}`}>\r\n                        odzież ({numberClothes.length})\r\n                        {showShopingList(\"clothes\")}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"list_folder-clean\" onClick={() => handleKindOfProduct(\"clean\")}>\r\n                    <div className={`button clean ${selectItems === \"clean\" ? \"active\" : null}`}>\r\n                        art. chemiczne</div>\r\n                    <div>\r\n                        <ul className={`list_table clean-list ${selectItems === \"clean\" ? \"active\" : null}`}>\r\n                            art. chemiczne ({numberClean.length})\r\n                        {showShopingList(\"clean\")}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"list_folder-tools\" onClick={() => handleKindOfProduct(\"tools\")}>\r\n                    <div className={`button tools ${selectItems === \"tools\" ? \"active\" : null}`} >\r\n                        sprzęt domowy\r\n                    </div>\r\n                    <ul className={`list_table tools-list ${selectItems === \"tools\" ? \"active\" : null}`}>\r\n                        sprzęt domowy ({numberTools.length})\r\n                        {showShopingList(\"tools\")}\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"list_folder-other\" onClick={() => handleKindOfProduct(\"other\")}>\r\n                    <div className={`button other ${selectItems === \"other\" ? \"active\" : null}`}>\r\n                        inne\r\n                    </div>\r\n                    <ul className={`list_table other-list ${selectItems === \"other\" ? \"active\" : null}`}>\r\n                        inne ({numberOther.length})\r\n                        {showShopingList(\"other\")}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default ItemShopingList;\r\n","import React, { useState } from 'react';\nimport AddItem from './AddItem'\nimport ShoppingList from './ItemShoppingList'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCartArrowDown, faList, faArrowUp } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction App() {\n\n  const [icon, setChangeArrowIcons] = useState(false)\n  const [items, setItems] = useState(null)\n\n  const addNewItem = items => {\n    setItems(items)\n  }\n  const handleVisebleAddItemForm = () => {\n    setChangeArrowIcons(!icon)\n  }\n\n  return (\n\n    <div className=\"App\">\n      <header>\n        <div className=\"App_head\">\n          <h1 className=\"App_title\"><FontAwesomeIcon icon={faCartArrowDown} /> Lista zakupów</h1>\n          <div className=\"App_icon\" onClick={() => handleVisebleAddItemForm()}>\n            <FontAwesomeIcon icon={faList} />\n            <div className={`App_arrow ${icon ? \"turn\" : \"\"} `}>\n              <FontAwesomeIcon icon={faArrowUp} />\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <section >\n        <AddItem handleVisibieForm={icon} add={addNewItem} />\n      </section>\n\n      <hr />\n\n      <section>\n        <ShoppingList newItem={items} />\n      </section>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.scss';\nimport App from './componets/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}